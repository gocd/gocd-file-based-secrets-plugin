/*
 * Copyright 2019 ThoughtWorks, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import org.eclipse.jgit.api.Git

buildscript {
  repositories {
    gradlePluginPortal()
    mavenCentral()
  }

  dependencies {
    classpath group: 'org.eclipse.jgit', name: 'org.eclipse.jgit', version: '5.3.0.201903130848-r'
    classpath 'com.github.ben-manes:gradle-versions-plugin:0.20.0'
    classpath "co.riiid:gradle-github-plugin:0.4.2"
  }
}

apply plugin: "co.riiid.gradle"
apply plugin: 'com.github.ben-manes.versions'

allprojects {
  group = 'cd.go.plugin'
  project.ext.pluginVersion = '0.0.1'
  def git = Git.open(rootProject.projectDir)
  project.ext.gitRevision = git.log().setMaxCount(1).call().first().name()
  project.ext.distVersion = git.log().call().size()
  git.close()
  project.ext.fullVersion = project.distVersion ? "${project.pluginVersion}-${project.distVersion}" : project.pluginVersion
  version = project.fullVersion
  project.ext.pluginDesc = [
    id         : 'cd.go.secrets.file-based-plugin',
    version    : project.version,
    goCdVersion: '19.3.0',
    name       : 'File based secrets plugin for GoCD',
    description: 'File based secrets plugin for GoCD',
    vendorName : 'ThoughtWorks, Inc.',
    vendorUrl  : 'https://github.com/gocd/gocd-file-based-secrets-plugin',
  ]

  tasks.withType(AbstractArchiveTask) {
    includeEmptyDirs false
    duplicatesStrategy DuplicatesStrategy.EXCLUDE

    preserveFileTimestamps = false
    reproducibleFileOrder = true
  }
}

subprojects {
  repositories {
    jcenter()
  }

  apply from: "${rootProject.projectDir}/plugin-common.gradle"
}

task allDependencies {
  dependsOn allprojects.collect { "$it.path:dependencies" }

  description = "Print dependency tree of all projects"
}

github {
  owner = System.getenv('GITHUB_USER') ?: 'bob'
  repo = 'gocd-file-based-secrets-plugin'
  token = System.getenv('GITHUB_TOKEN') ?: 'bad-token'
  tagName = "v${rootProject.pluginVersion}"
  name = "Version ${rootProject.pluginVersion}"
  targetCommitish = project.gitRevision

  def releaseNotesUrl = "https://github.com/${github.owner}/${github.repo}/blob/master/CHANGELOG.md#${github.tagName.replaceAll(/[^A-Za-z0-9]/, '')}"

  body = """
      # Version ${rootProject.fullVersion}
      
      See release notes at ${releaseNotesUrl}
    """.stripIndent().trim()

  assets = project(':gocd-file-based-secrets-plugin').jar.outputs.files.files
}

githubRelease.dependsOn subprojects*.tasks*.findByName('assemble')
