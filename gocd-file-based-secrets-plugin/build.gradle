/*
 * Copyright 2019 ThoughtWorks, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id "me.champeau.gradle.jmh" version "0.5.0"
}

configurations {
    extractedAtTopLevel
}

dependencies {
    compileOnly group: 'cd.go.plugin', name: 'go-plugin-api', version: '18.9.0'
    compile group: 'cd.go.plugin.base', name: 'gocd-plugin-base', version: '0.0.1'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.9'

    compile project(':db')
    compile project(':cli')

    compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.12'
    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: '1.18.12'

    extractedAtTopLevel project(':jar-class-loader')

    testCompile group: 'org.assertj', name: 'assertj-core', version: '3.15.0'
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.6.0'
    testRuntime group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.6.0'
    testCompile group: 'org.mockito', name: 'mockito-core', version: '3.6.28'
    testCompile group: 'org.skyscreamer', name: 'jsonassert', version: '1.5.0'
}

jar {
    dependsOn project.configurations.extractedAtTopLevel

    manifest {
        attributes 'Main-Class': 'com.thoughtworks.gocd.Boot'
        attributes 'GoCD-Main-Class': 'cd.go.plugin.secret.filebased.cli.Main'
    }

    from(configurations.compile) {
        into "lib/"
    }

//    This is useful for debugging
    from(sourceSets.main.java) {
        into "/"
    }

    from(project.configurations.extractedAtTopLevel.collect { it.isDirectory() ? it : zipTree(it) }) {
        into("/")
    }
}

test {
    useJUnitPlatform()
}
